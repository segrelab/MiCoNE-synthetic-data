// -*- mode:groovy -*-
// vim:ft=groovy

params.conda_dir = "/rprojectnb/visant/dkishore/envs"
// params.conda_dir = "/home/dileep/anaconda3/envs"
params.project = "visant"
params.naive_bayes_memory = '8 GB'
params.errorStrategy = "terminate"

// Process specific configuration
includeConfig './nf_micone/configs/process.config'
includeConfig './nf_micone/configs/profiles.config'

// Module specific configuration
includeConfig './nf_micone/configs/sequence_processing.config'
includeConfig './nf_micone/configs/denoise_cluster.config'
includeConfig './nf_micone/configs/tax_assignment.config'
includeConfig './nf_micone/configs/otu_processing.config'
includeConfig './nf_micone/configs/network_inference.config'

// User configuration
// Refer: documentation for details

process {
    withLabel:'mldm' {
        errorStrategy = 'ignore'
    }
    withLabel:'spieceasi' {
        errorStrategy = 'ignore'
    }
    withLabel:'flashweave' {
        errorStrategy = 'ignore'
    }
    withLabel:'harmonies' {
        errorStrategy = 'ignore'
    }
    withLabel:'cozine' {
        errorStrategy = 'ignore'
    }
    withLabel:'propr' {
        errorStrategy = 'ignore'
    }
    withLabel:'sparcc' {
        errorStrategy = 'ignore'
    }
    withLabel:'spearman' {
        errorStrategy = 'ignore'
    }
    withLabel:'pearson' {
        errorStrategy = 'ignore'
    }
}

params {
    input = "samplesheet.csv"
    output_dir = "outputs"
    network_inference {
        bootstrap{
            'resample' {
                bootstraps = 1000
            }
        }
        correlation {
            selection = ['sparcc', 'pearson', 'spearman', 'propr']
            'sparcc' { ncpus = 4 }
            'pearson' { ncpus = 4 }
            'spearman' { ncpus = 4 }
            'propr' { ncpus = 4 }
        }
        direct {
            selection = ['spieceasi', 'flashweave', 'mldm', 'cozine', 'harmonies', 'spring']
        }
        network {
            'make_network_with_pvalue' {
                metadata_file = "${PWD}/metadata.json"
            }
            'make_network_without_pvalue' {
                metadata_file = "${PWD}/metadata.json"
            }
            'merge_pvalues' {
                id_field = "id"
            }
            'create_consensus' {
                pvalue_filter = "false"
                interaction_filter = "false"
                id_field = "id"
            }
        }
    }
}

executor {
    $local {
        cpus = 36
        memory = '1 TB'
    }
}

